{"ast":null,"code":"import { Router } from '@angular/router';\nimport { inject } from \"@angular/core\";\nimport { OAuthService } from \"angular-oauth2-oidc\";\nexport const authGuard = (route, state) => {\n  const oauth2 = inject(OAuthService);\n  const router = inject(Router);\n  if (oauth2.hasValidAccessToken() && oauth2.hasValidIdToken()) {\n    return true;\n  } else {\n    router.navigate(['/signin', {\n      login: true\n    }]);\n    return false;\n  }\n};","map":{"version":3,"names":["Router","inject","OAuthService","authGuard","route","state","oauth2","router","hasValidAccessToken","hasValidIdToken","navigate","login"],"sources":["/Users/fenggu/Documents/git/Template/demo-angular/src/app/auth.guard.ts"],"sourcesContent":["import {CanActivateFn, Router} from '@angular/router';\nimport {Injectable, inject} from \"@angular/core\";\nimport {OAuthService} from \"angular-oauth2-oidc\";\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const oauth2 = inject(OAuthService);\n  const router = inject(Router);\n  if (oauth2.hasValidAccessToken() &&\n      oauth2.hasValidIdToken()) {\n    return true;\n  } else {\n    router.navigate(['/signin', {login: true}]);\n    return false;\n  }\n};\n"],"mappings":"AAAA,SAAuBA,MAAM,QAAO,iBAAiB;AACrD,SAAoBC,MAAM,QAAO,eAAe;AAChD,SAAQC,YAAY,QAAO,qBAAqB;AAEhD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,MAAM,GAAGL,MAAM,CAACC,YAAY,CAAC;EACnC,MAAMK,MAAM,GAAGN,MAAM,CAACD,MAAM,CAAC;EAC7B,IAAIM,MAAM,CAACE,mBAAmB,EAAE,IAC5BF,MAAM,CAACG,eAAe,EAAE,EAAE;IAC5B,OAAO,IAAI;GACZ,MAAM;IACLF,MAAM,CAACG,QAAQ,CAAC,CAAC,SAAS,EAAE;MAACC,KAAK,EAAE;IAAI,CAAC,CAAC,CAAC;IAC3C,OAAO,KAAK;;AAEhB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}