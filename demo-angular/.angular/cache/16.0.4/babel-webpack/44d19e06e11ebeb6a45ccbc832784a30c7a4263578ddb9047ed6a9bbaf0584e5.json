{"ast":null,"code":"import { authCodeFlowConfig } from \"../config/auth-config\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/greeting-service.service\";\nimport * as i2 from \"angular-oauth2-oidc\";\nimport * as i3 from \"@angular/router\";\nclass AppComponent {\n  constructor(greetingService, oauthService, router) {\n    this.greetingService = greetingService;\n    this.oauthService = oauthService;\n    this.router = router;\n    this.title = 'demo-angular';\n    this.configureCodeFlow();\n  }\n  configureCodeFlow() {\n    this.oauthService.configure(authCodeFlowConfig);\n    this.oauthService.loadDiscoveryDocumentAndLogin();\n    this.oauthService.events.subscribe(e => {\n      console.log('event received:[', e.type, ']');\n      if (e.type === 'token_received') {\n        this.oauthService.loadUserProfile();\n      }\n    });\n    this.oauthService.setupAutomaticSilentRefresh();\n  }\n  getGreeting() {\n    return this.greetingService.getGreeting();\n  }\n  get userName() {\n    const claims = this.oauthService.getIdentityClaims();\n    if (!claims) return null;\n    return claims['given_name'];\n  }\n  get idToken() {\n    return this.oauthService.getIdToken();\n  }\n  get accessToken() {\n    return this.oauthService.getAccessToken();\n  }\n  refresh() {\n    this.oauthService.refreshToken();\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.GreetingServiceService), i0.ɵɵdirectiveInject(i2.OAuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 1,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"router-outlet\");\n    }\n  },\n  dependencies: [i3.RouterOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["authCodeFlowConfig","AppComponent","constructor","greetingService","oauthService","router","title","configureCodeFlow","configure","loadDiscoveryDocumentAndLogin","events","subscribe","e","console","log","type","loadUserProfile","setupAutomaticSilentRefresh","getGreeting","userName","claims","getIdentityClaims","idToken","getIdToken","accessToken","getAccessToken","refresh","refreshToken","i0","ɵɵdirectiveInject","i1","GreetingServiceService","i2","OAuthService","i3","Router","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement"],"sources":["/Users/fenggu/Documents/git/Template/demo-angular/src/app/app.component.ts","/Users/fenggu/Documents/git/Template/demo-angular/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {GreetingServiceService} from \"../service/greeting-service.service\";\nimport {Router} from \"@angular/router\";\nimport {OAuthService, OAuthEvent} from \"angular-oauth2-oidc\";\nimport {authCodeFlowConfig} from \"../config/auth-config\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'demo-angular';\n\n  constructor(private greetingService: GreetingServiceService,\n              private oauthService: OAuthService,\n    private router: Router) {\n    this.configureCodeFlow();\n  }\n\n\n\n  private configureCodeFlow() {\n    this.oauthService.configure(authCodeFlowConfig);\n    this.oauthService.loadDiscoveryDocumentAndLogin();\n\n    this.oauthService.events\n      .subscribe((e: OAuthEvent) => {\n        console.log('event received:[', e.type,']');\n          if (e.type === 'token_received') {\n            this.oauthService.loadUserProfile();\n          }\n      }\n        );\n    this.oauthService.setupAutomaticSilentRefresh();\n  }\n\n\n  getGreeting() {\n    return this.greetingService.getGreeting();\n  }\n\n  get userName(): string {\n    const claims = this.oauthService.getIdentityClaims();\n    if (!claims) return null;\n    return claims['given_name'];\n  }\n\n  get idToken(): string {\n    return this.oauthService.getIdToken();\n  }\n\n  get accessToken(): string {\n    return this.oauthService.getAccessToken();\n  }\n\n  refresh() {\n    this.oauthService.refreshToken();\n  }\n}\n\n\n","<router-outlet></router-outlet>\n"],"mappings":"AAIA,SAAQA,kBAAkB,QAAO,uBAAuB;;;;;AAExD,MAKaC,YAAY;EAGvBC,YAAoBC,eAAuC,EACvCC,YAA0B,EACpCC,MAAc;IAFJ,KAAAF,eAAe,GAAfA,eAAe;IACf,KAAAC,YAAY,GAAZA,YAAY;IACtB,KAAAC,MAAM,GAANA,MAAM;IAJhB,KAAAC,KAAK,GAAG,cAAc;IAKpB,IAAI,CAACC,iBAAiB,EAAE;EAC1B;EAIQA,iBAAiBA,CAAA;IACvB,IAAI,CAACH,YAAY,CAACI,SAAS,CAACR,kBAAkB,CAAC;IAC/C,IAAI,CAACI,YAAY,CAACK,6BAA6B,EAAE;IAEjD,IAAI,CAACL,YAAY,CAACM,MAAM,CACrBC,SAAS,CAAEC,CAAa,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,CAAC,CAACG,IAAI,EAAC,GAAG,CAAC;MACzC,IAAIH,CAAC,CAACG,IAAI,KAAK,gBAAgB,EAAE;QAC/B,IAAI,CAACX,YAAY,CAACY,eAAe,EAAE;;IAEzC,CAAC,CACE;IACL,IAAI,CAACZ,YAAY,CAACa,2BAA2B,EAAE;EACjD;EAGAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACf,eAAe,CAACe,WAAW,EAAE;EAC3C;EAEA,IAAIC,QAAQA,CAAA;IACV,MAAMC,MAAM,GAAG,IAAI,CAAChB,YAAY,CAACiB,iBAAiB,EAAE;IACpD,IAAI,CAACD,MAAM,EAAE,OAAO,IAAI;IACxB,OAAOA,MAAM,CAAC,YAAY,CAAC;EAC7B;EAEA,IAAIE,OAAOA,CAAA;IACT,OAAO,IAAI,CAAClB,YAAY,CAACmB,UAAU,EAAE;EACvC;EAEA,IAAIC,WAAWA,CAAA;IACb,OAAO,IAAI,CAACpB,YAAY,CAACqB,cAAc,EAAE;EAC3C;EAEAC,OAAOA,CAAA;IACL,IAAI,CAACtB,YAAY,CAACuB,YAAY,EAAE;EAClC;;AA/CW1B,YAAY,C;mBAAZA,YAAY,EAAA2B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,sBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;AAAA;AAAZlC,YAAY,C;QAAZA,YAAY;EAAAmC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXzBb,EAAA,CAAAe,SAAA,oBAA+B;;;;;;SDWlB1C,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}