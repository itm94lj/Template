{"ast":null,"code":"import * as i0 from \"@angular/core\";\n/**\n * Created by fenggu on 2023/6/7.\n */\nclass XhrInterceptor {\n  intercept(req, next) {\n    const xhr = req.clone({\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\n    });\n    return next.handle(xhr);\n  }\n}\nXhrInterceptor.ɵfac = function XhrInterceptor_Factory(t) {\n  return new (t || XhrInterceptor)();\n};\nXhrInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: XhrInterceptor,\n  factory: XhrInterceptor.ɵfac\n});\nexport { XhrInterceptor };","map":{"version":3,"names":["XhrInterceptor","intercept","req","next","xhr","clone","headers","set","handle","factory","ɵfac"],"sources":["/Users/fenggu/Documents/Base/demo_angular/demo-angular/src/service/XhrInterceptor.ts"],"sourcesContent":["import {HttpHandler, HttpRequest, HttpInterceptor} from \"@angular/common/http/index\";\nimport {Injectable} from \"@angular/core\";\n/**\n * Created by fenggu on 2023/6/7.\n */\n@Injectable()\nexport class XhrInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const xhr = req.clone({\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\n    });\n    return next.handle(xhr);\n  }\n}\n"],"mappings":";AAEA;;;AAGA,MACaA,cAAc;EAEzBC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,GAAG,GAAGF,GAAG,CAACG,KAAK,CAAC;MACpBC,OAAO,EAAEJ,GAAG,CAACI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,gBAAgB;KAC9D,CAAC;IACF,OAAOJ,IAAI,CAACK,MAAM,CAACJ,GAAG,CAAC;EACzB;;AAPWJ,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAS,OAAA,EAAdT,cAAc,CAAAU;AAAA;SAAdV,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}