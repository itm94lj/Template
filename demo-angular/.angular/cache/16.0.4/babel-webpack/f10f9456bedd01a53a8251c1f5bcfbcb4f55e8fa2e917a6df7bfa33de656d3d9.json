{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./authenticate.service\";\nclass GreetingServiceService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.greetingUrl = 'http://localhost:8777/greeting';\n  }\n  getGreeting() {\n    // const headers =  new HttpHeaders().set('X-Auth-Token', this.authService.token);\n    const headers = new HttpHeaders({\n      authorization: 'Basic ' + btoa('itm94lj' + ':' + 'password'),\n      'Cache-Control': 'no-cache'\n    });\n    return this.http.get(this.greetingUrl, {\n      headers: headers\n    });\n  }\n}\nGreetingServiceService.ɵfac = function GreetingServiceService_Factory(t) {\n  return new (t || GreetingServiceService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthenticateService));\n};\nGreetingServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GreetingServiceService,\n  factory: GreetingServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { GreetingServiceService };","map":{"version":3,"names":["HttpHeaders","GreetingServiceService","constructor","http","authService","greetingUrl","getGreeting","headers","authorization","btoa","get","i0","ɵɵinject","i1","HttpClient","i2","AuthenticateService","factory","ɵfac","providedIn"],"sources":["/Users/fenggu/Documents/Base/demo_angular/demo-angular/src/service/greeting-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Greeting} from \"../entity/Greeting\";\nimport {HttpClient, HttpHeaders} from '@angular/common/http'\nimport {AuthenticateService} from \"./authenticate.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GreetingServiceService {\n  greetingUrl = 'http://localhost:8777/greeting';\n\n  constructor(private http: HttpClient, private authService: AuthenticateService) { }\n\n  getGreeting() {\n    // const headers =  new HttpHeaders().set('X-Auth-Token', this.authService.token);\n    const headers = new HttpHeaders( { authorization: 'Basic ' + btoa('itm94lj' + ':' +'password') ,\n      'Cache-Control': 'no-cache'} );\n    return this.http.get<Greeting>(this.greetingUrl, {headers: headers});\n  }\n}\n"],"mappings":"AAEA,SAAoBA,WAAW,QAAO,sBAAsB;;;;AAG5D,MAGaC,sBAAsB;EAGjCC,YAAoBC,IAAgB,EAAUC,WAAgC;IAA1D,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAFzD,KAAAC,WAAW,GAAG,gCAAgC;EAEoC;EAElFC,WAAWA,CAAA;IACT;IACA,MAAMC,OAAO,GAAG,IAAIP,WAAW,CAAE;MAAEQ,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAAC,SAAS,GAAG,GAAG,GAAE,UAAU,CAAC;MAC5F,eAAe,EAAE;IAAU,CAAC,CAAE;IAChC,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAW,IAAI,CAACL,WAAW,EAAE;MAACE,OAAO,EAAEA;IAAO,CAAC,CAAC;EACtE;;AAVWN,sBAAsB,C;mBAAtBA,sBAAsB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;AAAtBf,sBAAsB,C;SAAtBA,sBAAsB;EAAAgB,OAAA,EAAtBhB,sBAAsB,CAAAiB,IAAA;EAAAC,UAAA,EAFrB;AAAM;SAEPlB,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}